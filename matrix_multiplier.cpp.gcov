        -:    0:Source:matrix_multiplier.cpp
        -:    0:Graph:matrix_multiplier.gcno
        -:    0:Data:matrix_multiplier.gcda
        -:    0:Runs:1
        -:    1:#include "matrix_multiplier.h"
        -:    2:
        -:    3:// Function for matrix multiplication
        1:    4:Matrix multiplyMatrices(const Matrix& A, const Matrix& B) {
        1:    5:    if (A.cols() != B.rows()) {
    #####:    6:        throw std::invalid_argument("Matrix dimensions do not allow multiplication");
        -:    7:    }
        -:    8:
        -:    9:	// Create new matrix with the appropriate size and set all elements to 0
        1:   10:    Matrix result(std::vector<std::vector<int>>(A.rows(), std::vector<int>(B.cols(), 0)));
        -:   11:
      501:   12:    for (size_t i = 0; i < A.rows(); i++) {
   250500:   13:        for (size_t j = 0; j < B.cols(); j++) {
125250000:   14:            for (size_t k = 0; k < A.cols(); k++) {
125000000:   15:                result(i, j) += A(i, k) * B(k, j);
        -:   16:            }
        -:   17:        }
        -:   18:    }
        -:   19:
        1:   20:    return result;
        -:   21:}
        -:   22:
        -:   23:// Implementation of the equality operator (==)
    #####:   24:bool Matrix::operator==(const Matrix& other) const {
    #####:   25:    return data == other.data;
        -:   26:}
        -:   27:
