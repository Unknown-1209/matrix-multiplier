        -:    0:Source:main.cpp
        -:    0:Graph:main.gcno
        -:    0:Data:main.gcda
        -:    0:Runs:2
        -:    1:#include "matrix_multiplier.h"
        -:    2:#include <iostream>
        -:    3:#include <chrono>
        -:    4:#include <cstdlib> // For rand()
        -:    5:#include <ctime>
        -:    6:
        -:    7:using namespace std;
        -:    8:
        2:    9:int main() {
        2:   10:    srand(time(0));
        -:   11:
        -:   12:    // Create two matrices
        2:   13:    Matrix A(500, 500);
        2:   14:    Matrix B(500, 500);
        -:   15:
        -:   16:	
        2:   17:	cout << "Generating dummy data for matrices...\n";
     1002:   18:    for (size_t i = 0; i < A.rows(); ++i) {
   501000:   19:        for (size_t j = 0; j < A.cols(); ++j) {
   500000:   20:            A(i, j) = rand() % 10;
   500000:   21:            B(i, j) = rand() % 10;
        -:   22:        }
        -:   23:    }
        -:   24:	
        -:   25:
        -:   26:	// Start timer
        2:   27:    auto start = std::chrono::high_resolution_clock::now();
        -:   28:	
        2:   29:	cout << "Multiplying matrices...\n";
        2:   30:	Matrix result = winogradMultiply(A,B);
        -:   31:
        -:   32:    // Stop timer
        2:   33:    auto end = std::chrono::high_resolution_clock::now();
        -:   34:
        -:   35:    // Calculate duration in milliseconds
        2:   36:    chrono::duration<double, std::milli> duration = end - start;
        -:   37:
        2:   38:    cout << "Matrix multiplication took " << duration.count() << " ms." << std::endl;
        -:   39:
        2:   40:    return 0;
        2:   41:}
        -:   42:
